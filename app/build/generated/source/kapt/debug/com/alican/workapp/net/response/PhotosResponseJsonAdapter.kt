// Code generated by moshi-kotlin-codegen. Do not edit.
package com.alican.workapp.net.response

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class PhotosResponseJsonAdapter(
  moshi: Moshi
) : JsonAdapter<PhotosResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("albumId", "id", "title", "url",
      "thumbnailUrl")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "albumId")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "title")

  @Volatile
  private var constructorRef: Constructor<PhotosResponse>? = null

  override fun toString(): String = buildString(36) {
      append("GeneratedJsonAdapter(").append("PhotosResponse").append(')') }

  override fun fromJson(reader: JsonReader): PhotosResponse {
    var albumId: Int? = null
    var id: Int? = null
    var title: String? = null
    var url: String? = null
    var thumbnailUrl: String? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          albumId = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          id = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          title = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          url = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          thumbnailUrl = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    @Suppress("UNCHECKED_CAST")
    val localConstructor: Constructor<PhotosResponse> = this.constructorRef ?:
        PhotosResponse::class.java.getDeclaredConstructor(Int::class.javaObjectType,
        Int::class.javaObjectType, String::class.java, String::class.java, String::class.java,
        Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef =
        it }
    return localConstructor.newInstance(
        albumId,
        id,
        title,
        url,
        thumbnailUrl,
        mask0,
        null
    )
  }

  override fun toJson(writer: JsonWriter, value: PhotosResponse?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("albumId")
    nullableIntAdapter.toJson(writer, value.albumId)
    writer.name("id")
    nullableIntAdapter.toJson(writer, value.id)
    writer.name("title")
    nullableStringAdapter.toJson(writer, value.title)
    writer.name("url")
    nullableStringAdapter.toJson(writer, value.url)
    writer.name("thumbnailUrl")
    nullableStringAdapter.toJson(writer, value.thumbnailUrl)
    writer.endObject()
  }
}
